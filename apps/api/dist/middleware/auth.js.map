{"version":3,"file":"auth.js","sourceRoot":"/","sources":["middleware/auth.ts"],"names":[],"mappings":";;;;;;AACA,gEAA+B;AAWxB,MAAM,iBAAiB,GAAG,CAC/B,GAAyB,EACzB,GAAa,EACb,IAAkB,EAClB,EAAE;IACF,MAAM,UAAU,GAAG,GAAG,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;IAChD,MAAM,KAAK,GAAG,UAAU,IAAI,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAErD,IAAI,CAAC,KAAK,EAAE,CAAC;QACX,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,cAAc,EAAE,CAAC,CAAC;IACzD,CAAC;IAED,IAAI,CAAC;QACH,MAAM,IAAI,GAAG,sBAAG,CAAC,MAAM,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,UAAU,IAAI,gBAAgB,CAAC,CAAC;QAC3E,GAAG,CAAC,IAAI,GAAG,IAA6C,CAAC;QACzD,IAAI,EAAE,CAAC;IACT,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,eAAe,EAAE,CAAC,CAAC;IAC1D,CAAC;AACH,CAAC,CAAC;AAnBW,QAAA,iBAAiB,qBAmB5B","sourcesContent":["import { Request, Response, NextFunction } from 'express';\nimport jwt from 'jsonwebtoken';\n\n// Define interface to extend Express Request\ninterface AuthenticatedRequest extends Request {\n  user?: {\n    userId: number;\n    username: string;\n    [key: string]: any;\n  };\n}\n\nexport const authenticateToken = (\n  req: AuthenticatedRequest, \n  res: Response, \n  next: NextFunction\n) => {\n  const authHeader = req.headers['authorization'];\n  const token = authHeader && authHeader.split(' ')[1];\n\n  if (!token) {\n    return res.status(401).json({ error: 'Unauthorized' });\n  }\n\n  try {\n    const user = jwt.verify(token, process.env.JWT_SECRET || 'default_secret');\n    req.user = user as { userId: number; username: string; };\n    next();\n  } catch (error) {\n    return res.status(403).json({ error: 'Invalid token' });\n  }\n};"]}