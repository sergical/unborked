{"version":3,"file":"seed.js","sourceRoot":"/","sources":["db/seed.ts"],"names":[],"mappings":";;;;;AAAA,mCAA6B;AAC7B,6DAAgC;AAChC,qCAA8G;AAE9G,MAAM,YAAY,GAAG;IACnB;QACE,IAAI,EAAE,0BAA0B;QAChC,WAAW,EAAE,yJAAyJ;QACtK,KAAK,EAAE,QAAQ;QACf,KAAK,EAAE,wCAAwC;QAC/C,QAAQ,EAAE,aAAa;KACxB;IACD;QACE,IAAI,EAAE,wBAAwB;QAC9B,WAAW,EAAE,sJAAsJ;QACnK,KAAK,EAAE,QAAQ;QACf,KAAK,EAAE,oCAAoC;QAC3C,QAAQ,EAAE,UAAU;KACrB;IACD;QACE,IAAI,EAAE,qBAAqB;QAC3B,WAAW,EAAE,8GAA8G;QAC3H,KAAK,EAAE,QAAQ;QACf,KAAK,EAAE,sCAAsC;QAC7C,QAAQ,EAAE,SAAS;KACpB;IACD;QACE,IAAI,EAAE,wBAAwB;QAC9B,WAAW,EAAE,qHAAqH;QAClI,KAAK,EAAE,QAAQ;QACf,KAAK,EAAE,yCAAyC;QAChD,QAAQ,EAAE,SAAS;KACpB;IACD;QACE,IAAI,EAAE,kBAAkB;QACxB,WAAW,EAAE,2GAA2G;QACxH,KAAK,EAAE,QAAQ;QACf,KAAK,EAAE,mCAAmC;QAC1C,QAAQ,EAAE,SAAS;KACpB;IACD;QACE,IAAI,EAAE,wBAAwB;QAC9B,WAAW,EAAE,mGAAmG;QAChH,KAAK,EAAE,QAAQ;QACf,KAAK,EAAE,yCAAyC;QAChD,QAAQ,EAAE,QAAQ;KACnB;IACD;QACE,IAAI,EAAE,kBAAkB;QACxB,WAAW,EAAE,mHAAmH;QAChI,KAAK,EAAE,QAAQ;QACf,KAAK,EAAE,oCAAoC;QAC3C,QAAQ,EAAE,KAAK;KAChB;IACD;QACE,IAAI,EAAE,0BAA0B;QAChC,WAAW,EAAE,6HAA6H;QAC1I,KAAK,EAAE,OAAO;QACd,KAAK,EAAE,2CAA2C;QAClD,QAAQ,EAAE,UAAU;KACrB;IACD;QACE,IAAI,EAAE,uBAAuB;QAC7B,WAAW,EAAE,yHAAyH;QACtI,KAAK,EAAE,QAAQ;QACf,KAAK,EAAE,yCAAyC;QAChD,QAAQ,EAAE,UAAU;KACrB;IACD;QACE,IAAI,EAAE,0BAA0B;QAChC,WAAW,EAAE,+FAA+F;QAC5G,KAAK,EAAE,QAAQ;QACf,KAAK,EAAE,2CAA2C;QAClD,QAAQ,EAAE,cAAc;KACzB;IACD;QACE,IAAI,EAAE,0BAA0B;QAChC,WAAW,EAAE,sGAAsG;QACnH,KAAK,EAAE,QAAQ;QACf,KAAK,EAAE,2CAA2C;QAClD,QAAQ,EAAE,UAAU;KACrB;IACD;QACE,IAAI,EAAE,kBAAkB;QACxB,WAAW,EAAE,+GAA+G;QAC5H,KAAK,EAAE,QAAQ;QACf,KAAK,EAAE,gCAAgC;QACvC,QAAQ,EAAE,YAAY;KACvB;IACD;QACE,IAAI,EAAE,sBAAsB;QAC5B,WAAW,EAAE,6GAA6G;QAC1H,KAAK,EAAE,QAAQ;QACf,KAAK,EAAE,+BAA+B;QACtC,QAAQ,EAAE,aAAa;KACxB;IACD;QACE,IAAI,EAAE,sBAAsB;QAC5B,WAAW,EAAE,uGAAuG;QACpH,KAAK,EAAE,OAAO;QACd,KAAK,EAAE,kCAAkC;QACzC,QAAQ,EAAE,cAAc;KACzB;IACD;QACE,IAAI,EAAE,YAAY;QAClB,WAAW,EAAE,wGAAwG;QACrH,KAAK,EAAE,QAAQ;QACf,KAAK,EAAE,8BAA8B;QACrC,QAAQ,EAAE,aAAa;KACxB;IACD;QACE,IAAI,EAAE,eAAe;QACrB,WAAW,EAAE,iGAAiG;QAC9G,KAAK,EAAE,OAAO;QACd,KAAK,EAAE,iCAAiC;QACxC,QAAQ,EAAE,cAAc;KACzB;IACD;QACE,IAAI,EAAE,6BAA6B;QACnC,WAAW,EAAE,8GAA8G;QAC3H,KAAK,EAAE,QAAQ;QACf,KAAK,EAAE,sCAAsC;QAC7C,QAAQ,EAAE,cAAc;KACzB;IACD;QACE,IAAI,EAAE,wBAAwB;QAC9B,WAAW,EAAE,iGAAiG;QAC9G,KAAK,EAAE,QAAQ;QACf,KAAK,EAAE,iCAAiC;QACxC,QAAQ,EAAE,cAAc;KACzB;CACF,CAAC;AAEF,MAAM,YAAY,GAAG;IACnB,EAAE,IAAI,EAAE,0BAA0B,EAAE,SAAS,EAAE,QAAQ,EAAE,YAAY,EAAE,cAAc,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAG,EAAE;IACtH,EAAE,IAAI,EAAE,wBAAwB,EAAE,SAAS,EAAE,QAAQ,EAAE,YAAY,EAAE,cAAc,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE,EAAE;IACnH,EAAE,IAAI,EAAE,qBAAqB,EAAE,SAAS,EAAE,OAAO,EAAE,YAAY,EAAE,cAAc,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE,EAAE;IAC/G,EAAE,IAAI,EAAE,wBAAwB,EAAE,SAAS,EAAE,QAAQ,EAAE,YAAY,EAAE,cAAc,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,EAAE,EAAE;IACpH,EAAE,IAAI,EAAE,kBAAkB,EAAE,SAAS,EAAE,QAAQ,EAAE,YAAY,EAAE,cAAc,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,EAAE,EAAE;IAC9G,EAAE,IAAI,EAAE,wBAAwB,EAAE,SAAS,EAAE,QAAQ,EAAE,YAAY,EAAE,cAAc,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,EAAE,EAAE;IACpH,EAAE,IAAI,EAAE,kBAAkB,EAAE,SAAS,EAAE,QAAQ,EAAE,YAAY,EAAE,cAAc,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,EAAE,EAAE;IAC9G,EAAE,IAAI,EAAE,0BAA0B,EAAE,SAAS,EAAE,OAAO,EAAE,YAAY,EAAE,cAAc,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,EAAE,EAAE;IACrH,EAAE,IAAI,EAAE,uBAAuB,EAAE,SAAS,EAAE,OAAO,EAAE,YAAY,EAAE,cAAc,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,EAAE,EAAE;IAClH,EAAE,IAAI,EAAE,0BAA0B,EAAE,SAAS,EAAE,QAAQ,EAAE,YAAY,EAAE,cAAc,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,EAAE,EAAE;IACtH,EAAE,IAAI,EAAE,0BAA0B,EAAE,SAAS,EAAE,QAAQ,EAAE,YAAY,EAAE,cAAc,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,EAAE,EAAE;IACtH,EAAE,IAAI,EAAE,kBAAkB,EAAE,SAAS,EAAE,QAAQ,EAAE,YAAY,EAAE,cAAc,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,EAAE,EAAE;IAC9G,EAAE,IAAI,EAAE,sBAAsB,EAAE,SAAS,EAAE,QAAQ,EAAE,YAAY,EAAE,cAAc,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,EAAE,EAAE;CACnH,CAAC;AAEF,KAAK,UAAU,YAAY;IACzB,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;IAEnC,MAAM,gBAAgB,GAAG,EAAE,CAAC;IAC5B,KAAK,MAAM,OAAO,IAAI,YAAY,EAAE,CAAC;QACnC,OAAO,CAAC,GAAG,CAAC,qBAAqB,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC;QAEjD,MAAM,CAAC,UAAU,CAAC,GAAG,MAAM,UAAE,CAAC,MAAM,CAAC,iBAAQ,CAAC,CAAC,MAAM,CAAC;YACpD,IAAI,EAAE,OAAO,CAAC,IAAI;YAClB,WAAW,EAAE,OAAO,CAAC,WAAW;YAChC,KAAK,EAAE,OAAO,CAAC,KAAK;YACpB,KAAK,EAAE,OAAO,CAAC,KAAK;YACpB,QAAQ,EAAE,OAAO,CAAC,QAAQ;SAC3B,CAAC,CAAC,SAAS,EAAE,CAAC;QAEf,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAClC,OAAO,CAAC,GAAG,CAAC,mBAAmB,UAAU,CAAC,EAAE,EAAE,CAAC,CAAC;IAClD,CAAC;IAED,OAAO,CAAC,GAAG,CAAC,WAAW,gBAAgB,CAAC,MAAM,WAAW,CAAC,CAAC;IAC3D,OAAO,gBAAgB,CAAC;AAC1B,CAAC;AAED,KAAK,UAAU,YAAY,CAAC,gBAAuB;IACjD,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;IAEpC,gCAAgC;IAChC,MAAM,UAAU,GAAG,IAAI,GAAG,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAEnE,KAAK,MAAM,IAAI,IAAI,YAAY,EAAE,CAAC;QAChC,wCAAwC;QACxC,MAAM,gBAAgB,GAAG,gBAAgB,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC,CAAC;QAE5E,KAAK,MAAM,OAAO,IAAI,gBAAgB,EAAE,CAAC;YACvC,OAAO,CAAC,GAAG,CAAC,yBAAyB,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC;YAErD,oDAAoD;YACpD,MAAM,UAAE,CAAC,MAAM,CAAC,mBAAU,CAAC,CAAC,MAAM,CAAC;gBACjC,SAAS,EAAE,OAAO,CAAC,EAAE;gBACrB,SAAS,EAAE,IAAI,CAAC,SAAS;aAC1B,CAAC,CAAC;YAEH,gCAAgC;YAChC,MAAM,KAAK,GAAG,UAAU,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YACxC,MAAM,SAAS,GAAG,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAC7C,MAAM,QAAQ,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,SAAS,CAAC,GAAG,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAElE,0DAA0D;YAC1D,MAAM,UAAE,CAAC,MAAM,CAAC,wBAAe,CAAC,CAAC,MAAM,CAAC;gBACtC,SAAS,EAAE,OAAO,CAAC,EAAE;gBACrB,QAAQ,EAAE,QAAQ;gBAClB,YAAY,EAAE,IAAI,CAAC,YAAY;gBAC/B,QAAQ,EAAE,IAAI,CAAC,QAAQ;gBACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;aACxB,CAAC,CAAC;YAEH,OAAO,CAAC,GAAG,CAAC,+BAA+B,OAAO,CAAC,EAAE,EAAE,CAAC,CAAC;QAC3D,CAAC;IACH,CAAC;IAED,OAAO,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC;AAC7C,CAAC;AAED,KAAK,UAAU,IAAI;IACjB,IAAI,CAAC;QACH,OAAO,CAAC,GAAG,CAAC,iCAAiC,CAAC,CAAC;QAE/C,8CAA8C;QAC9C,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;QACzC,MAAM,mBAAI,CAAC,KAAK,CAAC,gIAAgI,CAAC,CAAC;QACnJ,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;QAEjC,yBAAyB;QACzB,OAAO,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC;QAC3C,MAAM,UAAE,CAAC,MAAM,CAAC,uBAAc,CAAC,CAAC,MAAM,CAAC;YACrC;gBACE,IAAI,EAAE,cAAc;gBACpB,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,IAAI,IAAI,CAAC,YAAY,CAAC;gBACjC,OAAO,EAAE,IAAI,IAAI,CAAC,YAAY,CAAC;aAChC;YACD;gBACE,IAAI,EAAE,cAAc;gBACpB,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,IAAI,IAAI,CAAC,YAAY,CAAC;gBACjC,OAAO,EAAE,IAAI,IAAI,CAAC,YAAY,CAAC;aAChC;SACF,CAAC,CAAC;QAEH,sBAAsB;QACtB,MAAM,gBAAgB,GAAG,MAAM,YAAY,EAAE,CAAC;QAE9C,qBAAqB;QACrB,MAAM,YAAY,CAAC,gBAAgB,CAAC,CAAC;QAErC,OAAO,CAAC,GAAG,CAAC,0CAA0C,CAAC,CAAC;IAC1D,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,KAAK,CAAC,yBAAyB,EAAE,KAAK,CAAC,CAAC;QAChD,MAAM,KAAK,CAAC;IACd,CAAC;AACH,CAAC;AAED,yBAAyB;AACzB,IAAI,OAAO,CAAC,IAAI,KAAK,MAAM,EAAE,CAAC;IAC5B,IAAI,EAAE;SACH,IAAI,CAAC,GAAG,EAAE;QACT,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACrB,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAClB,CAAC,CAAC;SACD,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE;QACf,OAAO,CAAC,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;QAChC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAClB,CAAC,CAAC,CAAC;AACP,CAAC;AAED,kBAAe,IAAI,CAAC","sourcesContent":["import { db } from './index';\nimport pool from '../db-config';\nimport { products, salePrices, productMetadata, saleCategories, users, purchases, userCarts } from './schema';\n\nconst baseProducts = [\n  {\n    name: 'Performance Profiler Pro',\n    description: 'Advanced performance monitoring tool with real-time profiling, memory leak detection, and CPU usage analysis. Perfect for optimizing your applications.',\n    price: '299.99',\n    image: '/assets/images/performanceprofiler.png',\n    category: 'Performance'\n  },\n  {\n    name: 'Security Scanner Elite',\n    description: 'Comprehensive security scanning suite that identifies vulnerabilities, checks dependencies, and provides automated fixes for common security issues.',\n    price: '399.99',\n    image: '/assets/images/securityscanner.png',\n    category: 'Security'\n  },\n  {\n    name: 'Unit Test Generator',\n    description: 'AI-powered unit test generation tool that creates comprehensive test suites for your codebase automatically.',\n    price: '149.99',\n    image: '/assets/images/unittestgenerator.png',\n    category: 'Testing'\n  },\n  {\n    name: 'Code Coverage Reporter',\n    description: 'Detailed code coverage analysis with visual reports, branch coverage, and integration with popular CI/CD platforms.',\n    price: '199.99',\n    image: '/assets/images/codecoveragereporter.png',\n    category: 'Testing'\n  },\n  {\n    name: 'API Mocking Tool',\n    description: 'Create mock APIs quickly with realistic data generation, request validation, and automatic documentation.',\n    price: '179.99',\n    image: '/assets/images/apimockingtool.png',\n    category: 'Testing'\n  },\n  {\n    name: 'Docker Image Optimizer',\n    description: 'Reduce Docker image sizes by up to 80% with intelligent layer optimization and security scanning.',\n    price: '249.99',\n    image: '/assets/images/dockerimageoptimizer.png',\n    category: 'DevOps'\n  },\n  {\n    name: 'GraphQL Explorer',\n    description: 'Interactive GraphQL development environment with query builder, schema visualization, and performance monitoring.',\n    price: '189.99',\n    image: '/assets/images/graphqlexplorer.png',\n    category: 'API'\n  },\n  {\n    name: 'Responsive Design Tester',\n    description: 'Test your web applications across multiple devices and screen sizes simultaneously with live reload and screenshot capture.',\n    price: '99.99',\n    image: '/assets/images/responsivedesigntester.png',\n    category: 'Frontend'\n  },\n  {\n    name: 'Accessibility Checker',\n    description: 'Ensure your applications meet WCAG standards with automated accessibility testing and detailed remediation suggestions.',\n    price: '149.99',\n    image: '/assets/images/accessibilitychecker.png',\n    category: 'Frontend'\n  },\n  {\n    name: 'Code Complexity Analyzer',\n    description: 'Identify code smells, measure complexity metrics, and get actionable refactoring suggestions.',\n    price: '169.99',\n    image: '/assets/images/codecomplexityanalyzer.png',\n    category: 'Code Quality'\n  },\n  {\n    name: 'Data Migration Assistant',\n    description: 'Simplify database migrations with automated schema diff, data validation, and rollback capabilities.',\n    price: '279.99',\n    image: '/assets/images/datamigrationassistant.png',\n    category: 'Database'\n  },\n  {\n    name: 'Error Logger Pro',\n    description: 'Advanced error tracking and logging solution with real-time alerts, stack trace analysis, and error grouping.',\n    price: '219.99',\n    image: '/assets/images/errorlogger.png',\n    category: 'Monitoring'\n  },\n  {\n    name: 'Memory Leak Detector',\n    description: 'Identify and fix memory leaks in your applications with real-time memory profiling and allocation tracking.',\n    price: '259.99',\n    image: '/assets/images/memoryleak.png',\n    category: 'Performance'\n  },\n  {\n    name: 'Code Formatter Elite',\n    description: 'Automatic code formatting with support for multiple languages, custom style guides, and team presets.',\n    price: '79.99',\n    image: '/assets/images/codeformatter.png',\n    category: 'Code Quality'\n  },\n  {\n    name: 'Loop Guard',\n    description: 'Prevent infinite loops and detect performance bottlenecks in your code with intelligent loop analysis.',\n    price: '129.99',\n    image: '/assets/images/loopguard.png',\n    category: 'Performance'\n  },\n  {\n    name: 'Syntax Shield',\n    description: 'Real-time syntax checking and error prevention with intelligent code completion and validation.',\n    price: '99.99',\n    image: '/assets/images/syntaxshield.png',\n    category: 'Code Quality'\n  },\n  {\n    name: 'Undefined Variable Detector',\n    description: 'Catch undefined variables before runtime with static analysis and type checking across your entire codebase.',\n    price: '139.99',\n    image: '/assets/images/undefinedvariable.png',\n    category: 'Code Quality'\n  },\n  {\n    name: 'Callback Hell Resolver',\n    description: 'Refactor callback-heavy code into clean async/await patterns with automatic promise conversion.',\n    price: '159.99',\n    image: '/assets/images/callbackhell.png',\n    category: 'Code Quality'\n  }\n];\n\nconst saleMetadata = [\n  { name: 'Performance Profiler Pro', salePrice: '199.99', saleCategory: 'Black Friday', featured: true, priority: 100 },\n  { name: 'Security Scanner Elite', salePrice: '249.99', saleCategory: 'Black Friday', featured: true, priority: 95 },\n  { name: 'Unit Test Generator', salePrice: '89.99', saleCategory: 'Cyber Monday', featured: true, priority: 90 },\n  { name: 'Code Coverage Reporter', salePrice: '129.99', saleCategory: 'Cyber Monday', featured: false, priority: 85 },\n  { name: 'API Mocking Tool', salePrice: '119.99', saleCategory: 'Black Friday', featured: false, priority: 80 },\n  { name: 'Docker Image Optimizer', salePrice: '169.99', saleCategory: 'Cyber Monday', featured: false, priority: 75 },\n  { name: 'GraphQL Explorer', salePrice: '129.99', saleCategory: 'Black Friday', featured: false, priority: 70 },\n  { name: 'Responsive Design Tester', salePrice: '59.99', saleCategory: 'Cyber Monday', featured: false, priority: 65 },\n  { name: 'Accessibility Checker', salePrice: '99.99', saleCategory: 'Black Friday', featured: false, priority: 60 },\n  { name: 'Code Complexity Analyzer', salePrice: '109.99', saleCategory: 'Cyber Monday', featured: false, priority: 55 },\n  { name: 'Data Migration Assistant', salePrice: '189.99', saleCategory: 'Black Friday', featured: false, priority: 50 },\n  { name: 'Error Logger Pro', salePrice: '149.99', saleCategory: 'Black Friday', featured: false, priority: 45 },\n  { name: 'Memory Leak Detector', salePrice: '179.99', saleCategory: 'Cyber Monday', featured: false, priority: 40 }\n];\n\nasync function seedProducts() {\n  console.log('Seeding products...');\n\n  const insertedProducts = [];\n  for (const product of baseProducts) {\n    console.log(`Creating product: ${product.name}`);\n\n    const [newProduct] = await db.insert(products).values({\n      name: product.name,\n      description: product.description,\n      price: product.price,\n      image: product.image,\n      category: product.category\n    }).returning();\n\n    insertedProducts.push(newProduct);\n    console.log(`Created product ${newProduct.id}`);\n  }\n\n  console.log(`Created ${insertedProducts.length} products`);\n  return insertedProducts;\n}\n\nasync function seedSaleData(insertedProducts: any[]) {\n  console.log('Seeding sale data...');\n\n  // Create a map for quick lookup\n  const productMap = new Map(insertedProducts.map(p => [p.name, p]));\n\n  for (const sale of saleMetadata) {\n    // Find products matching this base name\n    const matchingProducts = insertedProducts.filter(p => p.name === sale.name);\n\n    for (const product of matchingProducts) {\n      console.log(`Adding sale data for: ${product.name}`);\n\n      // Insert sale price (N+1 pattern for workshop demo)\n      await db.insert(salePrices).values({\n        productId: product.id,\n        salePrice: sale.salePrice\n      });\n\n      // Calculate discount percentage\n      const price = parseFloat(product.price);\n      const salePrice = parseFloat(sale.salePrice);\n      const discount = (((price - salePrice) / price) * 100).toFixed(2);\n\n      // Insert product metadata (another N+1 for workshop demo)\n      await db.insert(productMetadata).values({\n        productId: product.id,\n        discount: discount,\n        saleCategory: sale.saleCategory,\n        featured: sale.featured,\n        priority: sale.priority\n      });\n\n      console.log(`Added sale data for product ${product.id}`);\n    }\n  }\n\n  console.log('Sale data seeding completed');\n}\n\nasync function seed() {\n  try {\n    console.log('Starting fresh database seed...');\n\n    // Clear all existing data and reset sequences\n    console.log('Clearing existing data...');\n    await pool.query('TRUNCATE TABLE user_carts, purchases, product_metadata, sale_prices, products, sale_categories, users RESTART IDENTITY CASCADE');\n    console.log('Database cleared.');\n\n    // Create sale categories\n    console.log('Creating sale categories...');\n    await db.insert(saleCategories).values([\n      {\n        name: 'Black Friday',\n        description: 'Exclusive Black Friday deals',\n        startDate: new Date('2024-11-29'),\n        endDate: new Date('2024-11-30')\n      },\n      {\n        name: 'Cyber Monday',\n        description: 'Amazing Cyber Monday savings',\n        startDate: new Date('2024-12-02'),\n        endDate: new Date('2024-12-03')\n      }\n    ]);\n\n    // Seed products first\n    const insertedProducts = await seedProducts();\n\n    // Then add sale data\n    await seedSaleData(insertedProducts);\n\n    console.log('Database seeding completed successfully!');\n  } catch (error) {\n    console.error('Error seeding database:', error);\n    throw error;\n  }\n}\n\n// Run if called directly\nif (require.main === module) {\n  seed()\n    .then(() => {\n      console.log('Done!');\n      process.exit(0);\n    })\n    .catch((error) => {\n      console.error('Failed:', error);\n      process.exit(1);\n    });\n}\n\nexport default seed;"]}