{"version":3,"file":"salePrices.js","sourceRoot":"/","sources":["db/schema/salePrices.ts"],"names":[],"mappings":";;;AAAA,iDAAqG;AAErG,wDAAwD;AACxD,0DAA0D;AAC7C,QAAA,UAAU,GAAG,IAAA,iBAAO,EAAC,aAAa,EAAE;IAC/C,EAAE,EAAE,IAAA,gBAAM,EAAC,IAAI,CAAC,CAAC,UAAU,EAAE;IAC7B,SAAS,EAAE,IAAA,iBAAO,EAAC,YAAY,CAAC,CAAC,OAAO,EAAE,EAAE,2CAA2C;IACvF,SAAS,EAAE,IAAA,iBAAO,EAAC,YAAY,EAAE,EAAE,SAAS,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,OAAO,EAAE;IACvE,SAAS,EAAE,IAAA,mBAAS,EAAC,YAAY,CAAC,CAAC,UAAU,EAAE,CAAC,OAAO,EAAE;CAC1D,CAAC,CAAC;AAEH,sDAAsD;AACtD,4DAA4D;AAC/C,QAAA,eAAe,GAAG,IAAA,iBAAO,EAAC,kBAAkB,EAAE;IACzD,EAAE,EAAE,IAAA,gBAAM,EAAC,IAAI,CAAC,CAAC,UAAU,EAAE;IAC7B,SAAS,EAAE,IAAA,iBAAO,EAAC,YAAY,CAAC,CAAC,OAAO,EAAE,EAAE,gBAAgB;IAC5D,QAAQ,EAAE,IAAA,iBAAO,EAAC,UAAU,EAAE,EAAE,SAAS,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC;IACzD,YAAY,EAAE,IAAA,iBAAO,EAAC,eAAe,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,EAAE,yCAAyC;IAClG,QAAQ,EAAE,IAAA,iBAAO,EAAC,UAAU,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC;IAC5C,QAAQ,EAAE,IAAA,iBAAO,EAAC,UAAU,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,oCAAoC;IAC9E,SAAS,EAAE,IAAA,mBAAS,EAAC,YAAY,CAAC,CAAC,UAAU,EAAE,CAAC,OAAO,EAAE;CAC1D,CAAC,CAAC;AAEH,qDAAqD;AACrD,qDAAqD;AACxC,QAAA,cAAc,GAAG,IAAA,iBAAO,EAAC,iBAAiB,EAAE;IACvD,EAAE,EAAE,IAAA,gBAAM,EAAC,IAAI,CAAC,CAAC,UAAU,EAAE;IAC7B,IAAI,EAAE,IAAA,iBAAO,EAAC,MAAM,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,OAAO,EAAE;IAChD,WAAW,EAAE,IAAA,iBAAO,EAAC,aAAa,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC;IACpD,SAAS,EAAE,IAAA,mBAAS,EAAC,YAAY,CAAC,CAAC,OAAO,EAAE;IAC5C,OAAO,EAAE,IAAA,mBAAS,EAAC,UAAU,CAAC,CAAC,OAAO,EAAE;CACzC,CAAC,CAAC","sourcesContent":["import { pgTable, serial, integer, decimal, varchar, timestamp, boolean } from 'drizzle-orm/pg-core';\n\n// Poorly designed: Each sale price is a separate record\n// This will cause N+1 queries when fetching sale products\nexport const salePrices = pgTable('sale_prices', {\n  id: serial('id').primaryKey(),\n  productId: integer('product_id').notNull(), // No foreign key constraint - bad practice\n  salePrice: decimal('sale_price', { precision: 10, scale: 2 }).notNull(),\n  createdAt: timestamp('created_at').defaultNow().notNull(),\n});\n\n// Poorly designed: Product metadata stored separately\n// This forces additional joins to get complete product info\nexport const productMetadata = pgTable('product_metadata', {\n  id: serial('id').primaryKey(),\n  productId: integer('product_id').notNull(), // No index here\n  discount: decimal('discount', { precision: 5, scale: 2 }),\n  saleCategory: varchar('sale_category', { length: 100 }), // Denormalized, requires string matching\n  featured: boolean('featured').default(false),\n  priority: integer('priority').default(0), // No index, will cause slow sorting\n  updatedAt: timestamp('updated_at').defaultNow().notNull(),\n});\n\n// Poorly designed: Sale categories stored separately\n// This causes additional queries to match categories\nexport const saleCategories = pgTable('sale_categories', {\n  id: serial('id').primaryKey(),\n  name: varchar('name', { length: 100 }).notNull(),\n  description: varchar('description', { length: 255 }),\n  startDate: timestamp('start_date').notNull(),\n  endDate: timestamp('end_date').notNull(),\n});\n"]}